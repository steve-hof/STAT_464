inner_results[i, 4] <- poss_x
inner_results[i, 5] <- obj.func(poss_x)
if(obj.func(poss_x) < obj.func(curr_x)) {
curr_x <- poss_x
} else {
p <- min(1, exp( (obj.func(poss_x - curr_x)/tau[epoch]) ))
if(rbinom(1,1,p)) {curr_x <- poss_x}
}
# cat("x=", round(curr_x, digits=4), "\t y=", round(obj.func(curr_x), digits=4), "\n")
}
return(inner_results)
# return(min(obj.func(poss_x), obj.func(curr_x), inner_results))
}
# results <- matrix(num_starts, 5)
boo <- sa(k=0.9)
boo
###################################################################################
###############################     STAT 464      #################################
###############################   ASSIGNMENT #2   #################################
#' @author: Steve Hof
#' @date:   February 15, 2019
rm(list=ls())
setwd("~/school/math/Computational_Statistics_464/assignments/A2")
library(dplyr)
library(tidyverse)
# question 3
dx <- function(a, b) {runif(1, a, b)}
obj.func <- function(x) {exp(-x/4) * cos(2*x)}
iters <- function(k, tau_0) {
tau <- tau_0
epoch <- 0
cushion <- .00001
while(tau > cushion) {
tau <- tau*k
epoch <- epoch + 1
}
return(epoch)
}
sa <- function(x_0=10, tau_0=10, a=-0.5, b=0.5, k=0.2, lower=0, upper=10) {
# Initial Values
#x_0 <- runif(1,0,10)
x_0 <- 10
f_0 <- obj.func(x_0)
max_epoch <- iters(k, tau_0)
tau <- rep(tau_0, max_epoch)
inner_results <- matrix(, nrow=length(tau), ncol=5)
colnames(inner_results) <- c("epoch", "curr_x", "curr_y", "poss_x", "poss_y")
for(i in 2:max_epoch) {tau[i] <- k*tau[i-1]}
epoch <- 1
curr_x <- x_0
for(i in 1:length(tau)) {
repeat {
poss_x <- curr_x + dx(a, b)
if((poss_x > 0) && (poss_x < 10)) {break}
}
inner_results[i, 1] <- i
inner_results[i, 2] <- curr_x
inner_results[i, 3] <- obj.func(curr_x)
inner_results[i, 4] <- poss_x
inner_results[i, 5] <- obj.func(poss_x)
if(obj.func(poss_x) < obj.func(curr_x)) {
curr_x <- poss_x
} else {
p <- min(1, exp( (obj.func(poss_x - curr_x)/tau[epoch]) ))
if(rbinom(1,1,p)) {curr_x <- poss_x}
}
# cat("x=", round(curr_x, digits=4), "\t y=", round(obj.func(curr_x), digits=4), "\n")
}
temp <- list(curr_x, inner_results)
return(inner_results)
# return(min(obj.func(poss_x), obj.func(curr_x), inner_results))
}
# results <- matrix(num_starts, 5)
boo <- sa(k=0.9)
boo[[2]]
num_starts <- 20
random_start_results <- matrix(, nrow=num_starts, 3)
colnames(random_start_results) <- c("start location", "x", "y")
for(i in 1:num_starts) {
x_0 <- runif(1, 0, 10)
result <- sa(x_0=x_0, k=.9)
random_start_results[i,1] <- x_0
random_start_results[i,1] <- result[[1]]
random_start_results[i,1] <- obj.func(result[[1]])
}
random_start_results
###################################################################################
###############################     STAT 464      #################################
###############################   ASSIGNMENT #2   #################################
#' @author: Steve Hof
#' @date:   February 15, 2019
rm(list=ls())
setwd("~/school/math/Computational_Statistics_464/assignments/A2")
library(dplyr)
library(tidyverse)
# question 3
dx <- function(a, b) {runif(1, a, b)}
obj.func <- function(x) {exp(-x/4) * cos(2*x)}
iters <- function(k, tau_0) {
tau <- tau_0
epoch <- 0
cushion <- .00001
while(tau > cushion) {
tau <- tau*k
epoch <- epoch + 1
}
return(epoch)
}
sa <- function(x_0=10, tau_0=10, a=-0.5, b=0.5, k=0.2, lower=0, upper=10) {
# Initial Values
#x_0 <- runif(1,0,10)
x_0 <- 10
f_0 <- obj.func(x_0)
max_epoch <- iters(k, tau_0)
tau <- rep(tau_0, max_epoch)
inner_results <- matrix(, nrow=length(tau), ncol=5)
colnames(inner_results) <- c("epoch", "curr_x", "curr_y", "poss_x", "poss_y")
for(i in 2:max_epoch) {tau[i] <- k*tau[i-1]}
epoch <- 1
curr_x <- x_0
for(i in 1:length(tau)) {
repeat {
poss_x <- curr_x + dx(a, b)
if((poss_x > 0) && (poss_x < 10)) {break}
}
inner_results[i, 1] <- i
inner_results[i, 2] <- curr_x
inner_results[i, 3] <- obj.func(curr_x)
inner_results[i, 4] <- poss_x
inner_results[i, 5] <- obj.func(poss_x)
if(obj.func(poss_x) < obj.func(curr_x)) {
curr_x <- poss_x
} else {
p <- min(1, exp( (obj.func(poss_x - curr_x)/tau[epoch]) ))
if(rbinom(1,1,p)) {curr_x <- poss_x}
}
# cat("x=", round(curr_x, digits=4), "\t y=", round(obj.func(curr_x), digits=4), "\n")
}
temp <- list(curr_x, inner_results)
return(inner_results)
# return(min(obj.func(poss_x), obj.func(curr_x), inner_results))
}
# results <- matrix(num_starts, 5)
boo <- sa(k=0.9)
boo[[2]]
num_starts <- 20
random_start_results <- matrix(, nrow=num_starts, 3)
colnames(random_start_results) <- c("start location", "x", "y")
for(i in 1:num_starts) {
x_0 <- runif(1, 0, 10)
result <- sa(x_0=x_0, k=.9)
random_start_results[i,1] <- x_0
random_start_results[i,2] <- result[[1]]
random_start_results[i,3] <- obj.func(result[[1]])
}
random_start_results
###################################################################################
###############################     STAT 464      #################################
###############################   ASSIGNMENT #2   #################################
#' @author: Steve Hof
#' @date:   February 15, 2019
rm(list=ls())
setwd("~/school/math/Computational_Statistics_464/assignments/A2")
library(dplyr)
library(tidyverse)
# question 3
dx <- function(a, b) {runif(1, a, b)}
obj.func <- function(x) {exp(-x/4) * cos(2*x)}
iters <- function(k, tau_0) {
tau <- tau_0
epoch <- 0
cushion <- .00001
while(tau > cushion) {
tau <- tau*k
epoch <- epoch + 1
}
return(epoch)
}
sa <- function(x_0=10, tau_0=10, a=-0.5, b=0.5, k=0.2, lower=0, upper=10) {
# Initial Values
#x_0 <- runif(1,0,10)
#x_0 <- 10
f_0 <- obj.func(x_0)
max_epoch <- iters(k, tau_0)
tau <- rep(tau_0, max_epoch)
inner_results <- matrix(, nrow=length(tau), ncol=5)
colnames(inner_results) <- c("epoch", "curr_x", "curr_y", "poss_x", "poss_y")
for(i in 2:max_epoch) {tau[i] <- k*tau[i-1]}
epoch <- 1
curr_x <- x_0
for(i in 1:length(tau)) {
repeat {
poss_x <- curr_x + dx(a, b)
if((poss_x > 0) && (poss_x < 10)) {break}
}
inner_results[i, 1] <- i
inner_results[i, 2] <- curr_x
inner_results[i, 3] <- obj.func(curr_x)
inner_results[i, 4] <- poss_x
inner_results[i, 5] <- obj.func(poss_x)
if(obj.func(poss_x) < obj.func(curr_x)) {
curr_x <- poss_x
} else {
p <- min(1, exp( (obj.func(poss_x - curr_x)/tau[epoch]) ))
if(rbinom(1,1,p)) {curr_x <- poss_x}
}
# cat("x=", round(curr_x, digits=4), "\t y=", round(obj.func(curr_x), digits=4), "\n")
}
temp <- list(curr_x, inner_results)
return(inner_results)
# return(min(obj.func(poss_x), obj.func(curr_x), inner_results))
}
# results <- matrix(num_starts, 5)
boo <- sa(k=0.9)
boo[[2]]
num_starts <- 20
random_start_results <- matrix(, nrow=num_starts, 3)
colnames(random_start_results) <- c("start location", "x", "y")
for(i in 1:num_starts) {
x_0 <- runif(1, 0, 10)
result <- sa(x_0=x_0, k=.9)
random_start_results[i,1] <- x_0
random_start_results[i,2] <- result[[1]]
random_start_results[i,3] <- obj.func(result[[1]])
}
random_start_results
###################################################################################
###############################     STAT 464      #################################
###############################   ASSIGNMENT #2   #################################
#' @author: Steve Hof
#' @date:   February 15, 2019
rm(list=ls())
setwd("~/school/math/Computational_Statistics_464/assignments/A2")
library(dplyr)
library(tidyverse)
# question 3
dx <- function(a, b) {runif(1, a, b)}
obj.func <- function(x) {exp(-x/4) * cos(2*x)}
iters <- function(k, tau_0) {
tau <- tau_0
epoch <- 0
cushion <- .00001
while(tau > cushion) {
tau <- tau*k
epoch <- epoch + 1
}
return(epoch)
}
sa <- function(x_0=10, tau_0=10, a=-0.5, b=0.5, k=0.2, lower=0, upper=10) {
# Initial Values
#x_0 <- runif(1,0,10)
#x_0 <- 10
f_0 <- obj.func(x_0)
max_epoch <- iters(k, tau_0)
tau <- rep(tau_0, max_epoch)
inner_results <- matrix(, nrow=length(tau), ncol=5)
colnames(inner_results) <- c("epoch", "curr_x", "curr_y", "poss_x", "poss_y")
for(i in 2:max_epoch) {tau[i] <- k*tau[i-1]}
epoch <- 1
curr_x <- x_0
for(i in 1:length(tau)) {
repeat {
poss_x <- curr_x + dx(a, b)
if((poss_x > 0) && (poss_x < 10)) {break}
}
inner_results[i, 1] <- i
inner_results[i, 2] <- curr_x
inner_results[i, 3] <- obj.func(curr_x)
inner_results[i, 4] <- poss_x
inner_results[i, 5] <- obj.func(poss_x)
if(obj.func(poss_x) < obj.func(curr_x)) {
curr_x <- poss_x
} else {
p <- min(1, exp( (obj.func(poss_x - curr_x)/tau[epoch]) ))
if(rbinom(1,1,p)) {curr_x <- poss_x}
}
# cat("x=", round(curr_x, digits=4), "\t y=", round(obj.func(curr_x), digits=4), "\n")
}
temp <- list(curr_x, inner_results)
return(inner_results)
# return(min(obj.func(poss_x), obj.func(curr_x), inner_results))
}
# results <- matrix(num_starts, 5)
boo <- sa(k=0.9)
boo[[2]]
num_starts <- 20
random_start_results <- matrix(, nrow=num_starts, 3)
colnames(random_start_results) <- c("start location", "x", "y")
for(i in 1:num_starts) {
x_0 <- runif(1, 0, 10)
result <- sa(x_0=x_0, k=.9)
random_start_results[i,1] <- x_0
random_start_results[i,2] <- result[[1]]
random_start_results[i,3] <- obj.func(result[[1]])
}
random_start_results
debugSource('~/school/math/Computational_Statistics_464/assignments/A2/A2.R')
###################################################################################
###############################     STAT 464      #################################
###############################   ASSIGNMENT #2   #################################
#' @author: Steve Hof
#' @date:   February 15, 2019
rm(list=ls())
setwd("~/school/math/Computational_Statistics_464/assignments/A2")
library(dplyr)
library(tidyverse)
# question 3
dx <- function(a, b) {runif(1, a, b)}
obj.func <- function(x) {exp(-x/4) * cos(2*x)}
iters <- function(k, tau_0) {
tau <- tau_0
epoch <- 0
cushion <- .00001
while(tau > cushion) {
tau <- tau*k
epoch <- epoch + 1
}
return(epoch)
}
sa <- function(x_0, tau_0=10, a=-0.5, b=0.5, k, lower=0, upper=10) {
# Initial Values
#x_0 <- runif(1,0,10)
#x_0 <- 10
f_0 <- obj.func(x_0)
max_epoch <- iters(k, tau_0)
tau <- rep(tau_0, max_epoch)
inner_results <- matrix(, nrow=length(tau), ncol=5)
colnames(inner_results) <- c("epoch", "curr_x", "curr_y", "poss_x", "poss_y")
for(i in 2:max_epoch) {tau[i] <- k*tau[i-1]}
epoch <- 1
curr_x <- x_0
for(i in 1:length(tau)) {
repeat {
poss_x <- curr_x + dx(a, b)
if((poss_x > 0) && (poss_x < 10)) {break}
}
inner_results[i, 1] <- i
inner_results[i, 2] <- curr_x
inner_results[i, 3] <- obj.func(curr_x)
inner_results[i, 4] <- poss_x
inner_results[i, 5] <- obj.func(poss_x)
if(obj.func(poss_x) < obj.func(curr_x)) {
curr_x <- poss_x
} else {
p <- min(1, exp( (obj.func(poss_x - curr_x)/tau[epoch]) ))
if(rbinom(1,1,p)) {curr_x <- poss_x}
}
# cat("x=", round(curr_x, digits=4), "\t y=", round(obj.func(curr_x), digits=4), "\n")
}
temp <- list(curr_x, inner_results)
return(inner_results)
# return(min(obj.func(poss_x), obj.func(curr_x), inner_results))
}
# results <- matrix(num_starts, 5)
boo <- sa(k=0.9)
boo[[2]]
num_starts <- 20
random_start_results <- matrix(, nrow=num_starts, 3)
colnames(random_start_results) <- c("start location", "x", "y")
for(i in 1:num_starts) {
x_0 <- runif(1, 0, 10)
result <- sa(x_0=x_0, k=.9)
random_start_results[i,1] <- x_0
random_start_results[i,2] <- result[[1]]
random_start_results[i,3] <- obj.func(result[[1]])
}
random_start_results
debugSource('~/school/math/Computational_Statistics_464/assignments/A2/A2.R')
debugSource('~/school/math/Computational_Statistics_464/assignments/A2/A2.R')
debugSource('~/school/math/Computational_Statistics_464/assignments/A2/A2.R')
debugSource('~/school/math/Computational_Statistics_464/assignments/A2/A2.R')
debugSource('~/school/math/Computational_Statistics_464/assignments/A2/A2.R')
###################################################################################
###############################     STAT 464      #################################
###############################   ASSIGNMENT #2   #################################
#' @author: Steve Hof
#' @date:   February 15, 2019
rm(list=ls())
setwd("~/school/math/Computational_Statistics_464/assignments/A2")
library(dplyr)
library(tidyverse)
# question 3
dx <- function(a, b) {runif(1, a, b)}
obj.func <- function(x) {exp(-x/4) * cos(2*x)}
iters <- function(k, tau_0) {
tau <- tau_0
epoch <- 0
cushion <- .00001
while(tau > cushion) {
tau <- tau*k
epoch <- epoch + 1
}
return(epoch)
}
sa <- function(x_0, tau_0=10, a=-0.5, b=0.5, k, lower=0, upper=10) {
# Initial Values
f_0 <- obj.func(x_0)
max_epoch <- iters(k, tau_0)
tau <- rep(tau_0, max_epoch)
inner_results <- matrix(, nrow=length(tau), ncol=5)
colnames(inner_results) <- c("epoch", "curr_x", "curr_y", "poss_x", "poss_y")
for(i in 2:max_epoch) {tau[i] <- k*tau[i-1]}
epoch <- 1
curr_x <- x_0
for(i in 1:length(tau)) {
repeat {
poss_x <- curr_x + dx(a, b)
if((poss_x > 0) && (poss_x < 10)) {break}
}
inner_results[i, 1] <- i
inner_results[i, 2] <- curr_x
inner_results[i, 3] <- obj.func(curr_x)
inner_results[i, 4] <- poss_x
inner_results[i, 5] <- obj.func(poss_x)
if(obj.func(poss_x) < obj.func(curr_x)) {
curr_x <- poss_x
} else {
p <- min(1, exp( (obj.func(poss_x - curr_x)/tau[epoch]) ))
if(rbinom(1,1,p)) {curr_x <- poss_x}
}
# cat("x=", round(curr_x, digits=4), "\t y=", round(obj.func(curr_x), digits=4), "\n")
}
temp <- list(curr_x, inner_results)
return(inner_results)
# return(min(obj.func(poss_x), obj.func(curr_x), inner_results))
}
# results <- matrix(num_starts, 5)
# boo <- sa(k=0.9)
# boo[[2]]
num_starts <- 20
random_start_results <- matrix(, nrow=num_starts, 3)
colnames(random_start_results) <- c("start location", "x", "y")
for(i in 1:num_starts) {
start <- runif(1, 0, 10)
result <- sa(x_0=start, k=.9)
random_start_results[i,1] <- x_0
random_start_results[i,2] <- result[[1]]
random_start_results[i,3] <- obj.func(result[[1]])
}
random_start_results
debugSource('~/school/math/Computational_Statistics_464/assignments/A2/A2.R')
debugSource('~/school/math/Computational_Statistics_464/assignments/A2/A2.R')
###################################################################################
###############################     STAT 464      #################################
###############################   ASSIGNMENT #2   #################################
#' @author: Steve Hof
#' @date:   February 15, 2019
rm(list=ls())
setwd("~/school/math/Computational_Statistics_464/assignments/A2")
library(dplyr)
library(tidyverse)
# question 3
dx <- function(a, b) {runif(1, a, b)}
obj.func <- function(x) {exp(-x/4) * cos(2*x)}
iters <- function(k, tau_0) {
tau <- tau_0
epoch <- 0
cushion <- .00001
while(tau > cushion) {
tau <- tau*k
epoch <- epoch + 1
}
return(epoch)
}
sa <- function(x_0, tau_0=10, a=-0.5, b=0.5, k, lower=0, upper=10) {
# Initial Values
x_0
f_0 <- obj.func(x_0)
max_epoch <- iters(k, tau_0)
tau <- rep(tau_0, max_epoch)
inner_results <- matrix(, nrow=length(tau), ncol=5)
colnames(inner_results) <- c("epoch", "curr_x", "curr_y", "poss_x", "poss_y")
for(i in 2:max_epoch) {tau[i] <- k*tau[i-1]}
epoch <- 1
curr_x <- x_0
for(i in 1:length(tau)) {
repeat {
poss_x <- curr_x + dx(a, b)
if((poss_x > 0) && (poss_x < 10)) {break}
}
inner_results[i, 1] <- i
inner_results[i, 2] <- curr_x
inner_results[i, 3] <- obj.func(curr_x)
inner_results[i, 4] <- poss_x
inner_results[i, 5] <- obj.func(poss_x)
if(obj.func(poss_x) < obj.func(curr_x)) {
curr_x <- poss_x
} else {
p <- min(1, exp( (obj.func(poss_x - curr_x)/tau[epoch]) ))
if(rbinom(1,1,p)) {curr_x <- poss_x}
}
# cat("x=", round(curr_x, digits=4), "\t y=", round(obj.func(curr_x), digits=4), "\n")
}
temp <- list(curr_x, inner_results)
return(inner_results)
}
# results <- matrix(num_starts, 5)
# boo <- sa(k=0.9)
# boo[[2]]
num_starts <- 20
random_start_results <- matrix(, nrow=num_starts, 3)
colnames(random_start_results) <- c("start location", "x", "y")
for(i in 1:num_starts) {
start_pos <- runif(1, 0, 10)
result <- sa(x_0=start_pos, k=.9)
random_start_results[i,1] <- x_0
random_start_results[i,2] <- result[[1]]
random_start_results[i,3] <- obj.func(result[[1]])
}
random_start_results
debugSource('~/school/math/Computational_Statistics_464/assignments/A2/A2.R')
debugSource('~/school/math/Computational_Statistics_464/assignments/A2/A2.R')
